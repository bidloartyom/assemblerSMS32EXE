mov dl, a0 ; указываем реестру дл €чейку а0, все €чейки до с0 не вывод€т значение на wyswitlacz VDU
mov bl, 0 ; указываем bl 0

start:

in 00 ; считываем знак с клавиатуры в реестр al
mov [dl],al ; сохран€ем этот знак в оперативной пам€ти
inc dl ; переходим в следующую €чейку дл - была а0 стала а1

cmp dl,af ; сравниваем дошел ли реестр дл до €чейки аф котора€ €вл€етс€ концом строки а
jz wyswietl ; если дошел до переходим к выводу текста

cmp al,0D ; сравниваем был ли этот нажатый знак enter 
jz wyswietl ; если это был энтер то переходим к выводу

jmp start ; принудительный прыжок в старт

wyswietl: ; цикл дл€ вывода знаков

mov bl, c0 ; присваеваем реестру бл €чейку с0 котора€ выводит знаки
mov cl, a0 ; присваеваем реестру цл €чейку а0 в которой записаны знаки

ret:

mov al, [cl] ; считываем знак записанный в €чейке реестра цл в реестр ал
mov [bl], al ; выводим этот знак в €чейку котора€ указана в реестре бл
inc bl ; переходим к следующей €чейке дл€ вывода данных
inc cl ; переходим к следующей €чейке дл€ считывани€ данных
cmp cl, dl ; сравниваем была ли эта €чейка конечной или нет
jz endl; если это была конечна€ €чейка записанных знаков то перепрыгиваем в конец программы

jmp ret; если не конечна€ €чейка то снова выводим следующий знак
endl:
end


